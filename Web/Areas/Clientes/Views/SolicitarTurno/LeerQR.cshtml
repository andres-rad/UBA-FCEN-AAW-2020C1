@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}


<div class="jumbotron justify-content-center">
    <h1>Escane el codigo QR del turnero</h1>
    <form id="qr_form" asp-action="ProcesarQR" method="post">
        <div class="row">
            <div id="reader"></div>
        </div>
        <div class="row justify-content-center">
            <input type="text" id="qrdata" name="data" hidden />
        </div>
    </form>
</div>

<script>
    (async () => {
        // This method will trigger user permissions
        try {
            /**
            * devices would be an array of objects of type:
            * { id: "id", label: "label" }
            */
            var devices = await Html5Qrcode.getCameras();
            if (devices && devices.length) {
                var cameraId = devices[0].id;
                // Create instance of the object. The only argument is the "id" of HTML element created above.
                const html5QrCode = new Html5Qrcode("reader");
                try {
                    html5QrCode.start(
                        cameraId,     // retreived in the previous step.
                        {
                            fps: 2,    // sets the framerate to 10 frame per second
                            //qrbox: 250  // sets only 250 X 250 region of viewfinder to
                            // scannable, rest shaded.
                        },
                        async qrCodeMessage => {
                            try {
                                await html5QrCode.stop();
                                console.log("QR Code scanning stopped.");
                            } catch (err) {
                                // Stop failed, handle it.
                                console.log("Unable to stop scanning.");
                            };
                            // do something when code is read. For example:
                            console.log(`QR Code detected: ${qrCodeMessage}`);
                            document.getElementById("qrdata").value = qrCodeMessage;
                            document.getElementById("qr_form").submit();

                        },
                        errorMessage => {
                            // parse error, ideally ignore it. For example:
                            console.log(`QR Code no longer in front of camera.`);
                        });
                } catch (err) {
                    // Start failed, handle it. For example,
                    console.log(`Unable to start scanning, error: ${err}`);
                }
            }
        }
        catch (err) {
            console.log(err);
        }
    })();
</script>


@*
    <script>
    // This method will trigger user permissions
        var devices = Html5Qrcode.getCameras().then(devices => {
            /**
             * devices would be an array of objects of type:
             * { id: "id", label: "label" }
             */
            if (devices && devices.length) {
                var cameraId = devices[0].id;
                // Create instance of the object. The only argument is the "id" of HTML element created above.
                const html5QrCode = new Html5Qrcode("reader");

                html5QrCode.start(
                    cameraId,     // retreived in the previous step.
                    {
                        fps: 2,    // sets the framerate to 10 frame per second
                        //qrbox: 250  // sets only 250 X 250 region of viewfinder to
                        // scannable, rest shaded.
                    },
                    qrCodeMessage => {
                        html5QrCode.stop().then(ignore => {
                            // QR Code scanning is stopped.
                            console.log("QR Code scanning stopped.");
                        }).catch(err => {
                            // Stop failed, handle it.
                            console.log("Unable to stop scanning.");
                        });
                        // do something when code is read. For example:
                        console.log(`QR Code detected: ${qrCodeMessage}`);
                        document.getElementById("qrdata").value = qrCodeMessage;
                        document.getElementById("qr_form").submit();

                    },
                    errorMessage => {
                        // parse error, ideally ignore it. For example:
                        console.log(`QR Code no longer in front of camera.`);
                    })
                    .catch(err => {
                        // Start failed, handle it. For example,
                        console.log(`Unable to start scanning, error: ${err}`);
                    });
            }
        }).catch(err => {
            console.log(err);
        });
    </script>*@